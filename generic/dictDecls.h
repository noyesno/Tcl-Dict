/*
 * dictDecls.h --
 *
 *	Declarations of functions in the platform independent public dict API.
 *
 * Copyright (c) 2004 by Pascal Scheffers
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @(#) $Id$
 */

#ifndef _DICTDECLS
#define _DICTDECLS

/*
 * WARNING: This file is automatically generated by the tools/genStubs.tcl
 * script.  Any modifications to the function declarations below should be made
 * in the generic/dict.decls script.
 */

/* !BEGIN!: Do not edit below this line. */

/*
 * Exported function declarations:
 */

#ifndef Tcl_DictObjPut_TCL_DECLARED
#define Tcl_DictObjPut_TCL_DECLARED
/* 0 */
EXTERN int		Tcl_DictObjPut _ANSI_ARGS_((Tcl_Interp * interp, 
				Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, 
				Tcl_Obj * valuePtr));
#endif
#ifndef Tcl_DictObjGet_TCL_DECLARED
#define Tcl_DictObjGet_TCL_DECLARED
/* 1 */
EXTERN int		Tcl_DictObjGet _ANSI_ARGS_((Tcl_Interp * interp, 
				Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, 
				Tcl_Obj ** valuePtrPtr));
#endif
#ifndef Tcl_DictObjRemove_TCL_DECLARED
#define Tcl_DictObjRemove_TCL_DECLARED
/* 2 */
EXTERN int		Tcl_DictObjRemove _ANSI_ARGS_((Tcl_Interp * interp, 
				Tcl_Obj * dictPtr, Tcl_Obj * keyPtr));
#endif
#ifndef Tcl_DictObjSize_TCL_DECLARED
#define Tcl_DictObjSize_TCL_DECLARED
/* 3 */
EXTERN int		Tcl_DictObjSize _ANSI_ARGS_((Tcl_Interp * interp, 
				Tcl_Obj * dictPtr, int * sizePtr));
#endif
#ifndef Tcl_DictObjFirst_TCL_DECLARED
#define Tcl_DictObjFirst_TCL_DECLARED
/* 4 */
EXTERN int		Tcl_DictObjFirst _ANSI_ARGS_((Tcl_Interp * interp, 
				Tcl_Obj * dictPtr, 
				Tcl_DictSearch * searchPtr, 
				Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, 
				int * donePtr));
#endif
#ifndef Tcl_DictObjNext_TCL_DECLARED
#define Tcl_DictObjNext_TCL_DECLARED
/* 5 */
EXTERN void		Tcl_DictObjNext _ANSI_ARGS_((
				Tcl_DictSearch * searchPtr, 
				Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, 
				int * donePtr));
#endif
#ifndef Tcl_DictObjDone_TCL_DECLARED
#define Tcl_DictObjDone_TCL_DECLARED
/* 6 */
EXTERN void		Tcl_DictObjDone _ANSI_ARGS_((
				Tcl_DictSearch * searchPtr));
#endif
#ifndef Tcl_DictObjPutKeyList_TCL_DECLARED
#define Tcl_DictObjPutKeyList_TCL_DECLARED
/* 7 */
EXTERN int		Tcl_DictObjPutKeyList _ANSI_ARGS_((
				Tcl_Interp * interp, Tcl_Obj * dictPtr, 
				int keyc, Tcl_Obj *CONST * keyv, 
				Tcl_Obj * valuePtr));
#endif
#ifndef Tcl_DictObjRemoveKeyList_TCL_DECLARED
#define Tcl_DictObjRemoveKeyList_TCL_DECLARED
/* 8 */
EXTERN int		Tcl_DictObjRemoveKeyList _ANSI_ARGS_((
				Tcl_Interp * interp, Tcl_Obj * dictPtr, 
				int keyc, Tcl_Obj *CONST * keyv));
#endif
#ifndef Tcl_NewDictObj_TCL_DECLARED
#define Tcl_NewDictObj_TCL_DECLARED
/* 9 */
EXTERN Tcl_Obj *	Tcl_NewDictObj _ANSI_ARGS_((void));
#endif
#ifndef Tcl_DbNewDictObj_TCL_DECLARED
#define Tcl_DbNewDictObj_TCL_DECLARED
/* 10 */
EXTERN Tcl_Obj *	Tcl_DbNewDictObj _ANSI_ARGS_((CONST char * file, 
				int line));
#endif

typedef struct DictStubs {
    int magic;
    struct DictStubHooks *hooks;

    int (*tcl_DictObjPut) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, Tcl_Obj * valuePtr)); /* 0 */
    int (*tcl_DictObjGet) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr, Tcl_Obj ** valuePtrPtr)); /* 1 */
    int (*tcl_DictObjRemove) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_Obj * keyPtr)); /* 2 */
    int (*tcl_DictObjSize) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * dictPtr, int * sizePtr)); /* 3 */
    int (*tcl_DictObjFirst) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * dictPtr, Tcl_DictSearch * searchPtr, Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, int * donePtr)); /* 4 */
    void (*tcl_DictObjNext) _ANSI_ARGS_((Tcl_DictSearch * searchPtr, Tcl_Obj ** keyPtrPtr, Tcl_Obj ** valuePtrPtr, int * donePtr)); /* 5 */
    void (*tcl_DictObjDone) _ANSI_ARGS_((Tcl_DictSearch * searchPtr)); /* 6 */
    int (*tcl_DictObjPutKeyList) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * dictPtr, int keyc, Tcl_Obj *CONST * keyv, Tcl_Obj * valuePtr)); /* 7 */
    int (*tcl_DictObjRemoveKeyList) _ANSI_ARGS_((Tcl_Interp * interp, Tcl_Obj * dictPtr, int keyc, Tcl_Obj *CONST * keyv)); /* 8 */
    Tcl_Obj * (*tcl_NewDictObj) _ANSI_ARGS_((void)); /* 9 */
    Tcl_Obj * (*tcl_DbNewDictObj) _ANSI_ARGS_((CONST char * file, int line)); /* 10 */
} DictStubs;

#ifdef __cplusplus
extern "C" {
#endif
extern DictStubs *dictStubsPtr;
#ifdef __cplusplus
}
#endif

#if defined(USE_DICT_STUBS) && !defined(USE_DICT_STUB_PROCS)

/*
 * Inline function declarations:
 */

#ifndef Tcl_DictObjPut
#define Tcl_DictObjPut \
	(dictStubsPtr->tcl_DictObjPut) /* 0 */
#endif
#ifndef Tcl_DictObjGet
#define Tcl_DictObjGet \
	(dictStubsPtr->tcl_DictObjGet) /* 1 */
#endif
#ifndef Tcl_DictObjRemove
#define Tcl_DictObjRemove \
	(dictStubsPtr->tcl_DictObjRemove) /* 2 */
#endif
#ifndef Tcl_DictObjSize
#define Tcl_DictObjSize \
	(dictStubsPtr->tcl_DictObjSize) /* 3 */
#endif
#ifndef Tcl_DictObjFirst
#define Tcl_DictObjFirst \
	(dictStubsPtr->tcl_DictObjFirst) /* 4 */
#endif
#ifndef Tcl_DictObjNext
#define Tcl_DictObjNext \
	(dictStubsPtr->tcl_DictObjNext) /* 5 */
#endif
#ifndef Tcl_DictObjDone
#define Tcl_DictObjDone \
	(dictStubsPtr->tcl_DictObjDone) /* 6 */
#endif
#ifndef Tcl_DictObjPutKeyList
#define Tcl_DictObjPutKeyList \
	(dictStubsPtr->tcl_DictObjPutKeyList) /* 7 */
#endif
#ifndef Tcl_DictObjRemoveKeyList
#define Tcl_DictObjRemoveKeyList \
	(dictStubsPtr->tcl_DictObjRemoveKeyList) /* 8 */
#endif
#ifndef Tcl_NewDictObj
#define Tcl_NewDictObj \
	(dictStubsPtr->tcl_NewDictObj) /* 9 */
#endif
#ifndef Tcl_DbNewDictObj
#define Tcl_DbNewDictObj \
	(dictStubsPtr->tcl_DbNewDictObj) /* 10 */
#endif

#endif /* defined(USE_DICT_STUBS) && !defined(USE_DICT_STUB_PROCS) */

/* !END!: Do not edit above this line. */

#endif /* _DICTDECLS */

